package back.Models;
// Generated Mar 22, 2024 3:54:49 PM by Hibernate Tools 3.5.0.Final

import java.util.List;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Course generated by hbm2java
 */
@Entity
@Table(name = "course", catalog = "auca")
public class Course implements java.io.Serializable {

	private Integer courseId;
	private Teacher teacher;
	private Coursedefinition coursedefinition;
	private Academicunit acadentunit;
	private List<Studentcourse> studentcourses;
	private List<Semester> semesters;

	public Course() {
	}

	public Course(Teacher teacher, Coursedefinition coursedefinition, Academicunit acadentunit) {
		this.teacher = teacher;
		this.coursedefinition = coursedefinition;
		this.acadentunit = acadentunit;
	}

	public Course(Teacher teacher, Coursedefinition coursedefinition, Academicunit acadentunit,
			List<Studentcourse> studentcourses, List<Semester> semesters) {
		this.teacher = teacher;
		this.coursedefinition = coursedefinition;
		this.acadentunit = acadentunit;
		this.studentcourses = studentcourses;
		this.semesters = semesters;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "course_id", unique = true, nullable = false)
	public Integer getCourseId() {
		return this.courseId;
	}

	public void setCourseId(Integer courseId) {
		this.courseId = courseId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Teacher_code", nullable = false)
	public Teacher getTeacher() {
		return this.teacher;
	}

	public void setTeacher(Teacher teacher) {
		this.teacher = teacher;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CourseDefinition_code", nullable = false)
	public Coursedefinition getCoursedefinition() {
		return this.coursedefinition;
	}

	public void setCoursedefinition(Coursedefinition coursedefinition) {
		this.coursedefinition = coursedefinition;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "DepartmentCode", nullable = false)
	public Academicunit getAcadentunit() {
		return this.acadentunit;
	}

	public void setAcadentunit(Academicunit acadentunit) {
		this.acadentunit = acadentunit;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "course")
	public List<Studentcourse> getStudentcourses() {
		return this.studentcourses;
	}

	public void setStudentcourses(List<Studentcourse> studentcourses) {
		this.studentcourses = studentcourses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "course")
	public List<Semester> getSemesters() {
		return this.semesters;
	}

	public void setSemesters(List<Semester> semesters) {
		this.semesters = semesters;
	}
}
